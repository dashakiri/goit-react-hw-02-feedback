{"version":3,"sources":["components/FeedbackWidget/FeedbackControls/FeedbackControls.styled.js","components/FeedbackWidget/FeedbackControls/FeedbackControls.jsx","components/FeedbackWidget/Section/Section.jsx","components/FeedbackWidget/Statistics/Statistics.jsx","components/FeedbackWidget/Notification/Notification.jsx","App.js","index.js"],"names":["Button","styled","button","FeedbackControls","options","onButtonClick","map","option","label","replace","toUpperCase","type","onClick","Section","title","children","Statistics","good","neutral","bad","total","positiveFeedback","Notification","message","App","state","FeedbackOptions","setState","prevState","CountTotalFeedback","CountPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAEaA,E,MAASC,EAAOC,OAAV,qK,OCCZ,SAASC,EAAT,GAAsD,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,cACxC,OACID,EAAQE,KAAI,SAAAC,GACZ,IAAMC,EAAQD,EAAOE,QAAQF,EAAO,GAAIA,EAAO,GAAGG,eAClD,OAAQ,cAACV,EAAD,CAAQW,KAAK,SAAsBC,QAAS,kBAAMP,EAAcE,IAAhE,SACHC,GAD8BD,MCLpC,SAASM,EAAT,GAAsC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACjC,OAAO,oCACP,6BAAKD,IACJC,KCHM,SAASC,EAAT,GAAqE,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,iBACxD,OACI,gCACA,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,UCPG,SAASC,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QAC1B,OAAO,8BACH,4BAAIA,M,SCyDGC,E,4MApDbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,gBAAkB,SAACnB,GAEjB,EAAKoB,UAAS,SAAAC,GAAS,sBACpBrB,EAASqB,EAAUrB,GAAU,O,EAIlCsB,mBAAqB,WACnB,MAA6B,EAAKJ,MAClC,OADA,EAAOR,KAAP,EAAaC,QAAb,EAAsBC,K,EAIxBW,gCAAkC,WAChC,IAAMb,EAAO,EAAKQ,MAAMR,KAClBG,EAAQ,EAAKS,qBACnB,OAAOE,KAAKC,MAAOf,EAAKG,EAAS,M,4CAGnC,WACE,MAA4Ba,KAAKR,MAA1BR,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QAAQC,EAArB,EAAqBA,IACdO,EAAwEO,KAAxEP,gBAAiBG,EAAuDI,KAAvDJ,mBAAoBC,EAAmCG,KAAnCH,gCAC5C,OACE,qCACA,cAACjB,EAAD,CAASC,MAAO,6BAAhB,SACE,cAACX,EAAD,CACAC,QAAS8B,OAAOC,KAAKF,KAAKR,OAC1BpB,cAAeqB,MAGjB,eAACb,EAAD,CACAC,MAAO,aADP,UAECe,IAAuB,GACvB,cAACb,EAAD,CACCC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOS,IACPR,iBAAkBS,MAEM,IAAzBD,KAA8B,cAACP,EAAD,CAAcC,QAAS,gC,GA/C1Ca,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.79f7b651.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Button = styled.button`\r\nmargin-right: 5px;\r\nbackground-color: white;\r\nborder: 1px solid grey;\r\nborder-radius: 10%;\r\n&:hover{\r\n    background-color: #63c5da;\r\n}\r\n`;","import React from \"react\";\r\nimport { Button } from \"./FeedbackControls.styled\";\r\n\r\nexport function FeedbackControls ({options, onButtonClick}) {\r\n    return (\r\n        options.map(option => {\r\n        const label = option.replace(option[0], option[0].toUpperCase()); \r\n        return (<Button type='button' key={option} onClick={() => onButtonClick(option)}>\r\n            {label}\r\n        </Button>)\r\n        }) \r\n    );\r\n}","import React from \"react\";\r\n\r\nexport function Section ({title, children}) {\r\nreturn <section>\r\n<h2>{title}</h2>\r\n{children}\r\n</section>\r\n}","import React from \"react\";\r\n\r\nexport function Statistics ({good, neutral, bad, total, positiveFeedback}) {\r\nreturn (\r\n    <div>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive feedback: {positiveFeedback}%</p>\r\n    </div>\r\n)\r\n}","import React from \"react\";\r\n\r\nexport function Notification({message}) {\r\n    return <div>\r\n        <p>{message}</p>\r\n        </div>\r\n};","import React, { Component } from 'react';\nimport { FeedbackControls } from './components/FeedbackWidget/FeedbackControls/FeedbackControls';\nimport { Section } from './components/FeedbackWidget/Section/Section';\nimport { Statistics } from './components/FeedbackWidget/Statistics/Statistics';\nimport { Notification } from './components/FeedbackWidget/Notification/Notification';\nimport './index.css';\n\nclass App extends Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  FeedbackOptions = (option) => {  \n    // console.log(this.state[option])\n    this.setState(prevState => ({      \n      [option]: prevState[option] + 1, \n    }));\n  };\n\n  CountTotalFeedback = () => {\n    const {good, neutral, bad} = this.state;\n    return good + neutral + bad;\n  };\n\n  CountPositiveFeedbackPercentage = () => {\n    const good = this.state.good;\n    const total = this.CountTotalFeedback();\n    return Math.round((good/total) * 100);\n  };\n\n  render() {\n    const {good, neutral,bad} = this.state;\n    const {FeedbackOptions, CountTotalFeedback, CountPositiveFeedbackPercentage} = this;\n    return (\n      <>\n      <Section title={'Please leave your feedback'}>\n        <FeedbackControls \n        options={Object.keys(this.state)} \n        onButtonClick={FeedbackOptions}\n        />\n      </Section>  \n      <Section \n      title={'Statistics'}>\n      {CountTotalFeedback() > 0 && \n      (<Statistics \n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={CountTotalFeedback()}\n        positiveFeedback={CountPositiveFeedbackPercentage()}\n      />)}\n      {CountTotalFeedback() === 0 && <Notification message={'No feedback given'}/>}    \n      </Section>      \n      </>\n    )\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}